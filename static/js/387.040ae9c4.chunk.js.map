{"version":3,"file":"static/js/387.040ae9c4.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n    margin-top: 30px;\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    @media screen and (min-width: 480px) {\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n`;\n\nexport const ReviewsItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    padding: 15px;\n    background-color: #2d3035;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n        rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n    width: 100%;\n`;\n\nexport const Txt = styled.p`\n    color: lightgray;\n    font-size: 18px;\n    &:first-of-type {\n        margin-bottom: 15px;\n    }\n`;\n\nexport const TxtBold = styled.span`\n    font-size: 21px;\n    font-weight: 700;\n`;\n\nexport const NoReviews = styled.p`\n    color: lightgray;\n    font-weight: 700;\n    font-size: 21px;\n    margin-top: 30px;\n    padding: 15px;\n    background-color: #2d3035;\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n        rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services';\nimport { Loader } from 'components';\nimport {\n    ReviewsList,\n    ReviewsItem,\n    Txt,\n    TxtBold,\n    NoReviews,\n} from './Reviews.styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        getMovieReviews(movieId)\n            .then(res => setReviews(res.results))\n            .catch(error => {\n                console.log(error);\n                toast.error(\n                    'Oops... Something went wrong. Please, try to refresh the page.',\n                    {\n                        position: 'top-center',\n                        autoClose: 3000,\n                        hideProgressBar: false,\n                        closeOnClick: true,\n                        pauseOnHover: true,\n                        draggable: true,\n                        progress: undefined,\n                        theme: 'dark',\n                    }\n                );\n            })\n            .finally(() => setIsLoading(false));\n    }, [movieId]);\n\n    if (!reviews) {\n        return <>{isLoading && <Loader />}</>;\n    }\n\n    return (\n        <>\n            {reviews.length === 0 && (\n                <NoReviews>We can't find any reviews for this movie</NoReviews>\n            )}\n            {isLoading && <Loader />}\n            {reviews.length > 0 && (\n                <ReviewsList>\n                    {reviews.map(({ author, id, content }) => {\n                        return (\n                            <ReviewsItem key={id}>\n                                <Txt>\n                                    <TxtBold>Author:</TxtBold> {author}\n                                </Txt>\n                                <Txt>{content}</Txt>\n                            </ReviewsItem>\n                        );\n                    })}\n                </ReviewsList>\n            )}\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={3000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n                theme=\"dark\"\n            />\n        </>\n    );\n};\n\nexport default Reviews;\n","import { RotatingLines } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nexport const LoaderSpinnerContainer = styled.div`\n    margin: 0 auto;\n    width: 80px;\n    height: 80px;\n`;\n\nexport const LoaderSpinner = styled(RotatingLines)``;\n","import { LoaderSpinnerContainer, LoaderSpinner } from './Loader.styled';\n\nexport const Loader = () => {\n    return (\n        <LoaderSpinnerContainer>\n            <LoaderSpinner strokeColor=\"white\" width=\"80\" />\n        </LoaderSpinnerContainer>\n    );\n};\n","import styled from 'styled-components';\n\nexport const SiteContainer = styled.div`\n    padding: 0 20px;\n    width: 100%;\n    @media screen and (min-width: 480px) {\n        margin: 0 auto;\n        width: 480px;\n    }\n    @media screen and (min-width: 768px) {\n        width: 768px;\n    }\n    @media screen and (min-width: 1200px) {\n        width: 1200px;\n    }\n`;\n","import { SiteContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n    return <SiteContainer>{children}</SiteContainer>;\n};\n","import styled from 'styled-components';\n\nexport const Films = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    @media screen and (min-width: 480px) {\n        flex-direction: row;\n        flex-wrap: wrap;\n    }\n`;\n","import { Films } from './MoviesList.styled';\nimport { MoviesListItem } from 'components';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n    return (\n        <Films>\n            {movies.map(({ id, title, poster_path }) => (\n                <MoviesListItem\n                    key={id}\n                    id={id}\n                    title={title}\n                    poster={poster_path}\n                />\n            ))}\n        </Films>\n    );\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            poster_path: PropTypes.string,\n        })\n    ),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 20px 25px -5px,\n        rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n    width: 100%;\n    @media screen and (min-width: 480px) {\n        width: calc((100% - 30px) / 2);\n    }\n    @media screen and (min-width: 768px) {\n        width: calc((100% - 60px) / 3);\n    }\n    @media screen and (min-width: 1200px) {\n        width: calc((100% - 90px) / 4);\n    }\n`;\n\nexport const ItemLink = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    padding: 15px;\n    background-color: #2d3035;\n    height: 100%;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        transform: scale(1.05);\n    }\n\n    &:hover Img,\n    &:focus Img {\n        transform: scale(1.2);\n    }\n\n    &:hover p,\n    &:focus p {\n        color: green;\n    }\n`;\n\nexport const ImgWrapper = styled.div`\n    width: 100%;\n    margin-bottom: 15px;\n    overflow: hidden;\n`;\n\nexport const Img = styled.img`\n    width: 100%;\n    height: auto;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    object-fit: cover;\n    @media screen and (min-width: 480px) {\n        height: 260px;\n    }\n    @media screen and (min-width: 768px) {\n        height: 288px;\n    }\n    @media screen and (min-width: 1200px) {\n        height: 356px;\n    }\n`;\n\nexport const ItemTitle = styled.p`\n    color: lightgray;\n    font-size: 24px;\n    font-weight: 700;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    @media screen and (min-width: 480px) {\n        font-size: 18px;\n    }\n`;\n","import {\n    Item,\n    ItemLink,\n    ImgWrapper,\n    Img,\n    ItemTitle,\n} from './MoviesListItem.styled';\nimport noPhotoPlaceholder from '../../img/no-poster-placeholder.jpg';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesListItem = ({ id, title, poster }) => {\n    const location = useLocation();\n\n    return (\n        <Item>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n                <ImgWrapper>\n                    <Img\n                        src={\n                            poster\n                                ? `https://image.tmdb.org/t/p/w500/${poster}`\n                                : `${noPhotoPlaceholder}`\n                        }\n                        alt={title}\n                    />\n                </ImgWrapper>\n                <ItemTitle>{title}</ItemTitle>\n            </ItemLink>\n        </Item>\n    );\n};\n\nMoviesListItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string,\n    poster: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const SearchFilmForm = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n    padding: 0 15px;\n    width: calc(100% - 40px);\n    height: 40px;\n    outline: none;\n    border: none;\n    font-size: 18px;\n    font-weight: 700;\n    color: #2d3035;\n    @media screen and (min-width: 480px) {\n        width: 440px;\n    }\n`;\n\nexport const Button = styled.button`\n    width: 40px;\n    height: 40px;\n    background-color: white;\n    color: #2d3035;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n        color: green;\n    }\n`;\n\nexport const SearchIcon = styled(FaSearch)`\n    width: 25px;\n    height: 25px;\n    fill: currentColor;\n`;\n","import { SearchFilmForm, Input, Button, SearchIcon } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n    return (\n        <SearchFilmForm onSubmit={onSubmit}>\n            <Input type=\"text\" name=\"searchField\" placeholder=\"Search movies\" />\n            <Button type=\"submit\" area-aria-label=\"Search\">\n                <SearchIcon />\n            </Button>\n        </SearchFilmForm>\n    );\n};\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func,\n};\n","import axios from 'axios';\n\nconst API_KEY = 'a2b23be55398d79ed0c58fbe13d82482';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst urls = {\n    trendingMovies: 'trending/movie/day?',\n    searchMovies: 'search/movie?',\n    movieDetails: 'movie/',\n    movieActors: 'movie/',\n    movieReviews: 'movie/',\n};\n\nasync function getMovieApi(url) {\n    try {\n        const response = await axios.get(url);\n        return response.data;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport function getTrendingMovies() {\n    return getMovieApi(`${urls.trendingMovies}api_key=${API_KEY}`);\n}\n\nexport function getSearchedMovies(searchQuery) {\n    return getMovieApi(\n        `${urls.searchMovies}api_key=${API_KEY}&query=${searchQuery}`\n    );\n}\n\nexport function getMovieDetails(id) {\n    return getMovieApi(`${urls.movieDetails}${id}?api_key=${API_KEY}`);\n}\n\nexport function getMovieActors(id) {\n    return getMovieApi(`${urls.movieActors}${id}/credits?api_key=${API_KEY}`);\n}\n\nexport function getMovieReviews(id) {\n    return getMovieApi(`${urls.movieReviews}${id}/reviews?api_key=${API_KEY}`);\n}\n"],"names":["ReviewsList","styled","ReviewsItem","Txt","TxtBold","NoReviews","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getMovieReviews","then","res","results","catch","error","console","log","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","finally","length","map","author","id","content","newestOnTop","rtl","pauseOnFocusLoss","LoaderSpinnerContainer","LoaderSpinner","RotatingLines","Loader","strokeColor","width","SiteContainer","Container","children","Films","MoviesList","movies","title","poster_path","MoviesListItem","poster","Item","ItemLink","Link","ImgWrapper","Img","ItemTitle","location","useLocation","to","state","from","src","noPhotoPlaceholder","alt","SearchFilmForm","Input","Button","SearchIcon","FaSearch","SearchForm","onSubmit","type","name","placeholder","API_KEY","axios","urls","getMovieApi","url","response","data","getTrendingMovies","getSearchedMovies","searchQuery","getMovieDetails","getMovieActors"],"sourceRoot":""}